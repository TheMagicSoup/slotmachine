/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package slotto;

import java.util.*;

/**
 *
 * @author zguledp16
 */
public class slotMachine extends javax.swing.JFrame {
    /*
    Creating vars for bank, bet, middle row first column slot, middle row second column slot, middle row third column slot
    reel symbol pool for rng, flag enabling/disabling nudging, 2D array as table for generated symbols, most recent winnings,
    flag enabling/disabling spinning
    */
    int bank = 4000;
    int bet = 0;
    int winnings=0;
    Fruit slot1;
    Fruit slot2;
    Fruit slot3;
    static ArrayList<Integer> reelnumbs = new ArrayList<>();
    boolean cannotNudge = false;
    Fruit[][] reels;
    int recwin;
    boolean canSpin=false;
    boolean betButtonPressed=false;
    /**
     * Creates new form slotMachine
     */
    public slotMachine() {
        //initialises bank jLabel & reels[][]
        this.reels = new Fruit[3][3];
        initComponents();
        jLabel6.setText("£" + bank);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(198, 156, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.setRequestFocusEnabled(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/spin.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("SLOT MACHINE!");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Bank:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("-");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Bet: £");

        jLabel8.setText("Enter a bet to get started.");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/default.gif"))); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton2MouseReleased(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/bethundred.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton6MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton6MouseReleased(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton3MouseReleased(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton4MouseReleased(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jSpinner1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner1.setToolTipText("");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/betmax.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton5MouseReleased(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Winnings:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner1))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // <editor-fold desc="Graphics setting code">   
    private void setSlotGraphics() {
        //Setting correct picture for each symbol
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[0][0].getName() + ".png")));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[1][0].getName() + ".png")));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[2][0].getName() + ".png")));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + slot1.getName() + "spec.png")));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + slot2.getName() + "spec.png")));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + slot3.getName() + "spec.png")));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[0][2].getName() + ".png")));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[1][2].getName() + ".png")));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/" + reels[2][2].getName() + ".png")));
    }

    private void setFailGraphics() {
        //Sets error graphic for each symbol & outputs failure message
        jLabel8.setText("You're BROKE!");
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
    }
    
    private void setNudgeFailGraphics() {
        //Sets failure graphic for middle row of symbols & outputs failure message
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
        jLabel8.setText("You can't nudge again until you spin!");
    }

    private void resetNudgeGraphics(){
        //Resets nudge graphics after they've been set to nudge2 due to trying to nudge while cannotNudge is flagged
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png")));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png")));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png"))); 
    }
    
    private void setErrGraphics(){
        //Sets error graphics for middle row of symbols & sets spin button graphic to spin2
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/ERR.png")));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/spin2.png")));
    }
    
    private void setWinGraphics(){
        //Sets jackpot graphics for middle row of symbols, sets spin button to spin2, sets nudge buttons to nudge2
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/spin2.png")));
        setNudgeFailGraphics();
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victoryspec.gif")));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victoryspec.gif")));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victoryspec.gif")));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/victory.gif")));
        jLabel8.setText("");
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/jackpot.gif")));
    }
    // </editor-fold>
    //Procedure handling adding, storing & outputting winnings
    private void winningsCalc(int multiplier){
        bet*=multiplier;
        bank+=bet;
        winnings+=bet;
        recwin=bet;
        jLabel6.setText("£"+bank);
        jLabel16.setText("£"+winnings);
    }
    
    private void checkSlots() {
        //Resets nudge flag
        cannotNudge = false;
        resetNudgeGraphics();
        jLabel8.setText("");
        //Triggered when all 3 slots are the same
        if (slot1.getID() == slot2.getID() && slot2.getID() == slot3.getID()) {
            switch (slot1.getID()) {
                case 0:
                    //If all slots are cherries, multiply wager by 10 & add as winnings
                    winningsCalc(10);
                    break;
                case 1:
                    //If all slots are bells, multiply wager by 10 & add as winnings
                    winningsCalc(10);
                    break;
                case 2:
                    //If all slots are BARs, multiply wager by 20 & add as winnings
                    winningsCalc(20);
                    break;
                case 3:
                    //If all slots are sevens, multiply wager by 30 & add as winnings
                    winningsCalc(30);
                    break;
                case 4:
                    //If all slots are lemons, multiply wager by 40 & add as winnings
                    winningsCalc(30);
                    break;
                case 5:
                    //If all slots are grapes , multiply wager by 60 & add as winnings
                    winningsCalc(60);
                    break;
                case 6:
                    //If all slots are oranges, multiply wager by 100 & add as winnings
                    winningsCalc(100);
                    break;
                case 7:
                    //If all slots are skulls, multiply wager by 10 & deduct
                    winningsCalc(-10);
                    break;
                case 8:
                    bank += 1000000;
                    winnings += 1000000;
                    recwin = 1000000;
                    jLabel6.setText("£" + bank);
                    jLabel16.setText("£" + winnings);
                    canSpin=false;
                    cannotNudge=true;
                    jLabel8.setText("JACKPOT!");
                    setWinGraphics();
                    break;
                case 9:
                    //If all slots are Dragon Balls, multiply wager by 400 & add to winnings
                    winningsCalc(400);
                    break;
            }
            //Otherwise, if 1 of the slots are cherries...
        }
        if (slot1.getID() == 0 || slot2.getID() == 0 || slot3.getID() == 0) {
            //If 2 of the slots are cherries, multiply wager by 5 & add to winnings
            if (((slot1.getID() == slot2.getID() || slot1.getID() == slot3.getID()) && slot1.getID() == 0) || ((slot2.getID() == slot3.getID()) && slot2.getID() == 0)){
                winningsCalc(5);
                //Otherwise, multiply wager by 2 & add to winnings
            } else {
                winningsCalc(2);
            }
            //Otherwise, if 1 of the slots are skulls...
        }
        if (slot1.getID() == 7 || slot2.getID() == 7 || slot3.getID() == 7) {
            ///If 2 of the slots are skulls, multiply wager by 5 & deduct
            if (((slot1.getID() == slot2.getID() || slot1.getID() == slot3.getID()) && slot1.getID() == 7) || ((slot2.getID() == slot3.getID()) && slot2.getID() == 7)) {
                winningsCalc(-5);
                //Otherwise, multiply wager by 2 & deduct
                //if(((slot1=slot2||slot1=slot3)&&slot1=7)||((slot2=slot3)&&slot2=7))
            } else {
                winningsCalc(-2);
                System.out.println("" + recwin);
            }
        } else {
            //If none of the symbols match and they aren't skulls or cherries, deduct wager from bank
            System.out.println("E");
            winningsCalc(-1);
            System.out.println(bank);
        }
        //If bank becomes empty, output fail graphics
        if (bank <= 0) {
            setFailGraphics();
        }

    }

    //Procedure for placing bets
    private void placeBet() {
        if (betButtonPressed) {
            canSpin = true;
            System.out.println("Successful bet placement");
            System.out.println("CANSPIN = " + canSpin);
            System.out.println("BET = " + bet);
            betButtonPressed=false;
        } else {
            //Trace message for whenever placeBet() is executed
            System.out.println("placeBet() went through");
            //Storing inputted bet in a variable separate from x for validations
            int x = (Integer) jSpinner1.getValue();
            //Bet is rejected if it exceeds what's in the bank
            if (x > bank) {
                jLabel8.setText("You can't bet more than you have!");
                //Bet is rejected if it's less than/equal to 0
            } else if (x <= 0) {
                jLabel8.setText("You can't bet nothing!");
                //If bet is valid, x is stored into bet & canSpin is set to true
                //Trace statements are output
            } else {
                bet = x;
                canSpin = true;
                System.out.println("Successful bet placement");
                System.out.println("CANSPIN = " + canSpin);
                System.out.println("BET = " + bet);
                System.out.println("X = " + x);
            }
        }
    }
    
    //Procedure handling nudge 
    private void nudge(Fruit[] slotsToMove) {
        //If the nudge flag or the canSpin flags aren't in the right state, nudging isn't possible
        if(cannotNudge||!canSpin){
            setNudgeFailGraphics();
            jLabel8.setText("You can't nudge until you spin!");
        }else{
            //Bank is reset to before the spin
            bank = Math.abs(recwin - bank) - 10;
            jLabel6.setText("£" + bank);
            //Trace statement, outputs what values are in each slot in the column
            // to check for difference between the stored symbols and the outputted graphics
            System.out.println("[" + slotsToMove[0].getName() + ", " + slotsToMove[1].getName() + ", " + slotsToMove[2].getName() + "]");
            //Replacing bottom slot with middle slot
            slotsToMove[2].replace(slotsToMove[1]);
            //Replacing middle slot with top slot
            slotsToMove[1].replace(slotsToMove[0]);
            //Creating new top slot
            slotsToMove[0].spinner(reelnumbs);
            //This was done in lieu of directly manipulating the array as it didn't work
            //Setting graphics for the symbols again
            setSlotGraphics();
            //Recalculating the winnings based on the new set of slots
            checkSlots();
            //Sets nudge flag to trues
            cannotNudge=true;
        }
    }
    
    //Procedure handling re-initialising slots each spin
    private void spinSlots(){
        //For each symbol, reset the object's contents & regenerate ID and name
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                reels[i][j]=new Fruit("",0);
                reels[i][j].spinner(reelnumbs);
            }
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Perform placeBet(), validate bet & store it
        placeBet();
        //If spin flag is true, perform rest of method
        if(canSpin) {
            //Trace statement for if this action successfully goes through
            System.out.println("action triggered");
            //Performs spinSlots()
            spinSlots();
            //Stores middle slot in each column in their own vars for comparing in checkSlots()
            slot1 = reels[0][1];
            slot2 = reels[1][1];
            slot3 = reels[2][1];
            //Sets slot graphics
            setSlotGraphics();
            //Checks slots
            checkSlots();
            //<editor-fold defaultstate="collapsed" desc="rng code">
            /*
            if(bank<=100) {
                if (bank<=200) {
                    if (bank<=300) {
                        if (bank<=400) {
                            if (bank<=500) {
                                for(int i=0;i<6;i++) {
                                    reelnumbs.remove(i);
                                }
                            }else{
                                int b=0;
                                while(reelnumbs.contains(0)){
                                    reelnumbs.remove(0);
                                }
                            }
                        }else{
                            for(int i=1;i<7;i++) {
                                reelnumbs.remove(i);
                            }
                        }
                    }else{
                        reelnumbs.remove(6);
                    }
                }
            }
            */
            //</editor-fold>
            // TODO add your handling code here:
        } else {
            setErrGraphics();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
//<editor-fold desc="Code for nudge button actions">
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nudge(reels[0]);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        nudge(reels[1]);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        nudge(reels[2]);
    }//GEN-LAST:event_jButton4ActionPerformed
//</editor-fold>
    
//<editor-fold defaultstate="collapsed" desc="Code for bet button actions">
	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        betButtonPressed=true;
        bet=bank;
        jSpinner1.setValue(bet);
    }//GEN-LAST:event_jButton5ActionPerformed
	
	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        betButtonPressed=true;
        bet+=100;
        jSpinner1.setValue(bet);
    }//GEN-LAST:event_jButton6ActionPerformed
	//</editor-fold>
        
//<editor-fold defaultstate="collapsed" desc="Code for button press/release graphics">
    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/spin2.png")));
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
        if(canSpin)jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/spin.png")));
    }//GEN-LAST:event_jButton1MouseReleased
    
    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseReleased
        if(!cannotNudge&&canSpin)jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png")));
    }//GEN-LAST:event_jButton2MouseReleased

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
    }//GEN-LAST:event_jButton3MousePressed

    private void jButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseReleased
        if(!cannotNudge&&canSpin)jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png")));
    }//GEN-LAST:event_jButton3MouseReleased

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge2.png")));
    }//GEN-LAST:event_jButton4MousePressed

    private void jButton4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseReleased
        if(!cannotNudge&&canSpin)jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/nudge.png")));
    }//GEN-LAST:event_jButton4MouseReleased

    private void jButton5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MousePressed
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/betmax2.png")));
    }//GEN-LAST:event_jButton5MousePressed

    private void jButton5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseReleased
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/betmax.png")));
    }//GEN-LAST:event_jButton5MouseReleased

    private void jButton6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MousePressed
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/bet2hundred.png")));
    }//GEN-LAST:event_jButton6MousePressed

    private void jButton6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseReleased
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slotto/img/bethundred.png")));
    }//GEN-LAST:event_jButton6MouseReleased
//</editor-fold>


    //HI
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(slotMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(slotMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(slotMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(slotMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //Arraylist initialisation
        for (int i = 0; i < 8; i++) {
            for(int j=0;j<10;j++){
                reelnumbs.add(i);
            }
        }
        reelnumbs.add(8);
        reelnumbs.add(9);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new slotMachine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
